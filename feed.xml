<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://yanxuceo.github.io/</id><title>Xu's Blog</title><subtitle>To be or not to be.</subtitle> <updated>2023-02-10T14:06:23+01:00</updated> <author> <name>xu dong</name> <uri>https://yanxuceo.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://yanxuceo.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://yanxuceo.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> Â© 2023 xu dong </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[VoiScale User Data Visualization] JavaScript, HTML and AWS Lambda code example</title><link href="https://yanxuceo.github.io/posts/JavaScript-visualization/" rel="alternate" type="text/html" title="[VoiScale User Data Visualization] JavaScript, HTML and AWS Lambda code example" /><published>2023-02-07T17:00:00+01:00</published> <updated>2023-02-10T14:05:59+01:00</updated> <id>https://yanxuceo.github.io/posts/JavaScript-visualization/</id> <content src="https://yanxuceo.github.io/posts/JavaScript-visualization/" /> <author> <name>xu dong</name> </author> <category term="Side Projects" /> <category term="Smart Food Scale" /> <summary> Create User-friendly Interface with Chart.js Tutorial from W3 Schools Code example of pie chart: &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"&amp;gt; &amp;lt;/script&amp;gt; &amp;lt;canvas id="myChart" style="width:100%;max-width:500px"&amp;gt;&amp;lt;/canvas&amp;gt; &amp;lt;script&amp;gt; var xValues = ["Calories", "Protein", "Fat", "Carbohydrate", "Fiber... </summary> </entry> <entry><title>[Alexa skill code example] How to use Promise, async and await</title><link href="https://yanxuceo.github.io/posts/alexa-code-example/" rel="alternate" type="text/html" title="[Alexa skill code example] How to use Promise, async and await" /><published>2023-01-17T17:00:00+01:00</published> <updated>2023-01-17T17:00:00+01:00</updated> <id>https://yanxuceo.github.io/posts/alexa-code-example/</id> <content src="https://yanxuceo.github.io/posts/alexa-code-example/" /> <author> <name>xu dong</name> </author> <category term="Side Projects" /> <category term="Smart Food Scale" /> <summary> Alexa cookbook on Github A very good blog on making HTTP Requests in your Alexa skill, learn how to use asynchronous features in Node.js. function httpGet() { return new Promise(((resolve, reject) =&amp;gt; { var options = { host: 'api.icndb.com', port: 443, path: '/jokes/random', method: 'GET', }; const request = https.request(options, (response... </summary> </entry> <entry><title>[Alexa APL Tutorial] Labs from Dabble Lab</title><link href="https://yanxuceo.github.io/posts/alexa-APL/" rel="alternate" type="text/html" title="[Alexa APL Tutorial] Labs from Dabble Lab" /><published>2023-01-17T17:00:00+01:00</published> <updated>2023-01-17T17:00:00+01:00</updated> <id>https://yanxuceo.github.io/posts/alexa-APL/</id> <content src="https://yanxuceo.github.io/posts/alexa-APL/" /> <author> <name>xu dong</name> </author> <category term="Side Projects" /> <category term="Smart Food Scale" /> <summary> A very good YouTube channel Dabble Lab on Alexa APL design. Alexa developer documentation Lab1 Containers Frame layout in Container. code: { "type": "APL", "version": "1.7", "settings": {}, "theme": "dark", "import": [], "resources": [ { "dimensions": { "boxWidth": "100%", //"boxWidth": 120, "boxHeight": 120 }, "colors": { "p... </summary> </entry> <entry><title>[CS144] Introduction to Computer Networking</title><link href="https://yanxuceo.github.io/posts/cs144-lectures/" rel="alternate" type="text/html" title="[CS144] Introduction to Computer Networking" /><published>2023-01-10T17:00:00+01:00</published> <updated>2023-01-12T10:15:48+01:00</updated> <id>https://yanxuceo.github.io/posts/cs144-lectures/</id> <content src="https://yanxuceo.github.io/posts/cs144-lectures/" /> <author> <name>xu dong</name> </author> <category term="Course Notes" /> <category term="CS144" /> <summary> Course info can be found here Good Blog TCP and socket Lecture videos: Bilibili and Youtube Problem: Applications send and receive data in packets over an Internet that is unreliable. Goal: Sending data reliably over an Internet that is unreliable. In summary: Packets are forwarded hop-by-hop using the IP destination address. Our applications use TCP to make sure they are delivered and p... </summary> </entry> <entry><title>[CS144] Labs: build some significant pieces of the Internet</title><link href="https://yanxuceo.github.io/posts/cs144-labs/" rel="alternate" type="text/html" title="[CS144] Labs: build some significant pieces of the Internet" /><published>2023-01-10T17:00:00+01:00</published> <updated>2023-01-12T09:26:39+01:00</updated> <id>https://yanxuceo.github.io/posts/cs144-labs/</id> <content src="https://yanxuceo.github.io/posts/cs144-labs/" /> <author> <name>xu dong</name> </author> <category term="Course Notes" /> <category term="CS144" /> <summary> Course info can be found here Lab 0: networking warmup Lab material keyword: reliable byte stream </summary> </entry> </feed>
